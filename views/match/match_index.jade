extend match

mixin picks_bans_row(picks_bans, team_int)
  each pick in picks_bans
    td(style="padding: 3px;")
      if pick.team === team_int
        - var hero_id = pick.hero_id
        - var is_pick = pick.is_pick
        - var hero = constants.heroes[hero_id]
        if hero
          span.img-text(class=pick.team ? "dire" : "radiant")
            img.img-small(src=hero.img, title=hero.localized_name, style= (is_pick ? "" : "-webkit-filter: grayscale(100%); filter: grayscale(100%);"))
            div #{(is_pick ? "Pick" : "Ban")} (#{pick.order + 1})
        else
          = hero_id
          
block match_content
  -
    var overviewColumns = [
      {
        name: "Player",
        title: "(Solo MMR)",
        property: true,
        notNumber: true
      },
      {
        name: "LV",
        title: "Level of hero",
        property: "level"
      },
      {
        name: "K",
        title: "Number of kills by hero",
        property: "kills"
      },
      {
        name: "D",
        title: "Number of deaths of hero",
        property: "deaths"
      },
      {
        name: "A",
        title: "Number of assists by hero",
        property: "assists"
      },
      {
        name: "LH",
        title: "Number of last hits by hero",
        property: "last_hits"
      },
      {
        name: "DN",
        title: "Number of denied creeps",
        property: "denies"
      },
      {
        name: "GOLD",
        title: "Total gold farmed",
        property: "total_gold"
      },
      {
        name: "GPM",
        title: "Gold farmed by hero per minute",
        property: "gold_per_min"
      },
      {
        name: "XPM",
        title: "Experience gained by hero per minute",
        property: "xp_per_min"
      },
      {
        name: "HD",
        title: "Amount of damage dealt to heroes",
        property: "hero_damage"
      },
      {
        name: "TD",
        title: "Amount of damage dealt to towers",
        property: "tower_damage"
      },
      {
        name: "HH",
        title: "Amount of health restored to heroes",
        property: "hero_healing"
      },
      {
        name: "Items",
        title: "Items built",
        notNumber: true
      }
    ];
    var skillColumns = [
      {
        name: "Player",
        property: false,
        notNumber: true
      },
      {
        name: "Skills"
      }
    ];
    
  .mdl-cell.mdl-cell--12-col
    +data_table({id:"index",summable:true, heading: "Overview"}, overviewColumns, match.players)
      
  if match.picks_bans
    .mdl-cell.mdl-cell--12-col     
        h4.inline-header Picks/Bans
        #picks-bans.table-responsive.collapse.in
          table.table.table-hover
            tbody
              tr
                +picks_bans_row(match.picks_bans, 0)
              tr
                +picks_bans_row(match.picks_bans, 1)
                
  .mdl-cell.mdl-cell--12-col
    +data_table({id:"skills", heading: "Skill Builds"}, skillColumns, match.players)
      
  .mdl-cell.mdl-cell--6-col.of-scroll
    h4 Buildings
    #map.mapContainer(data-radiant-win=match.radiant_win ? "1" : "0", data-tower-radiant=match.tower_status_radiant, data-tower-dire=match.tower_status_dire, data-barracks-radiant=match.barracks_status_radiant, data-barracks-dire=match.barracks_status_dire)
      img.map(src='//cdn.rawgit.com/kronusme/dota2-api/master/images/map/dota-map-6.82.jpg', alt="map")
  .mdl-cell.mdl-cell--6-col
    h4 Random Fact About This Day
    p#number
    script.
      $.get('http://numbersapi.com/!{moment.unix(match.start_time+match.duration).format("M/D")}/date', function(data) {
          $('#number').text(data);
      });
append footer_assets
  script.
    buildMap();
