extend match

block match_content
  .row
    .col-md-12
          .row
            .col-md-7
              h2 Map 
                small Hover over a cell to generate a map.
              #map.mapContainer
                img.map(src='//cdn.rawgit.com/kronusme/dota2-api/master/images/map/dota-map-6.82.jpg', alt="map")
            .col-md-5
              h2 Positions
              table.table.table-hover.table-responsive
                tr
                  th Hero
                  //th Exploration
                  th Lane
                  th Observer
                  th Sentry
                each player, ind in match.players
                  - var hero = constants.heroes[player.hero_id]
                  - var p = player.parsedPlayer
                  tr(class = player.isRadiant ? "success" : "danger")
                    td.hero
                      if hero
                        img(src=hero.img, title=hero.localized_name)
                      else
                        =player.hero_id
                    //td.activate(data-index=ind, data-type="pos") #{(p.explore*100).toFixed(2)}%
                    td.activate(data-index=ind, data-type="lane_pos") #{constants.lane_ids[p.lane] || "-"} (#{p.lane_role})
                    td.activate(data-index=ind, data-type="obs") #{p.obs_log.length || "-"}
                    td.activate(data-index=ind, data-type="sen") #{p.sen_log.lenth || "-"}

append footer_assets
  script.
    var heatmap = h337.create({
        container: document.getElementById('map'),
        radius: 15
      });
      var posData = !{JSON.stringify(match.posData)}
      console.log(posData);
      posData.forEach(function(d){
        d.lane_pos = scaleAndExtrema(d.lane_pos, 10, 0);
        //d.pos = scaleAndExtrema(d.pos, 10, 0);
        d.obs = scaleAndExtrema(d.obs, null, 5);
        d.sen = scaleAndExtrema(d.sen, null, 5);
      })
      
      function scaleAndExtrema(points, max, shift){
          points.forEach(function(p){
            p.x*=(600/127);
            p.y*=(600/127);
            p.value+=(shift || 0);
          })
          var vals = points.map(function(p){return p.value;});
          var localMax = Math.max.apply(null, vals);
          return {
          min: 0,
          max: max || localMax,
          data: points,
          };
      }
      
      $(".activate").on("mouseover", function(){
        var pData = posData[Number($(this).attr('data-index'))]
        var data = pData[$(this).attr('data-type')];
        console.log(data);
        heatmap.setData(data);
        heatmap.repaint();
      })
