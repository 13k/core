extend player

block playercontent
  //pre #{JSON.stringify(player.aggData, null, 2)}
  //th KDA
  //th Abandon
  //td #{((player.aggData.kills.sum + player.aggData.assists.sum)/(player.aggData.deaths.sum+player.matches.length)).toFixed(2)}
  //td #{((1-(player.aggData.leaver_status.counts[0]+player.aggData.leaver_status.counts[1])/player.matches.length)*100 || 0).toFixed(2)}%
  .row
    .col-md-12
      h2 Advanced
      .row
        .col-md-12
          h3 Items 
            small (#{player.aggData.purchase_time.n} matches)
          table.table#builds
            thead
              tr
                th Item
                th Item Name
                th: abbr(title="Number of times this item was built") Built
                th: abbr(title="Number of matches where this item was built") Matches
                th.time: abbr(title="Average (mean) time this item was built at") Avg Timing
                th: abbr(title="Percentage of matches this item was built in") Use%
                th: abbr(title="Percentage of matches won where this item was built") Win%

            tbody
              each val, key in player.aggData.purchase_time.counts
                - var item = constants.items[key]
                if item
                  tr 
                    td: img.item(src=item.img, title=key)
                    td= item.dname
                    td=player.aggData.purchase.counts[key]
                    td=player.aggData.item_usage.counts[key]
                    td=val/player.aggData.purchase.counts[key]
                    td
                      - var pct = 100*player.aggData.item_usage.counts[key]/player.aggData.item_usage.n
                      .progress
                        .progress-bar(class=pct >= 50 ? "progress-bar-success" : "progress-bar-danger" style="width: #{pct}%") #{pct.toFixed(2)}%
                    td
                      - var pct = 100*player.aggData.item_win.counts[key]/player.aggData.item_usage.counts[key]
                      .progress
                        .progress-bar(class=pct >= 50 ? "progress-bar-success" : "progress-bar-danger" style="width: #{pct}%") #{pct.toFixed(2)}%
      .row
        .col-md-12
          h3 Skills 
            small (#{player.aggData.hero_hits.n} matches)
          table.table#accuracy
            thead
              tr
                th Ability
                th Ability Name
                th Casts
                th Hits
                th Hit%
            tbody
              each val, key in player.aggData.hero_hits.counts
                - var ability = constants.abilities[key]
                - var casts = player.aggData.ability_uses.counts[key]
                - var hits = val
                if casts
                  tr
                    if ability
                      td
                        img.ability(src=ability.img, title=key)
                      td= ability.dname
                    else
                      td=key
                      td=key
                    td=casts
                    td=hits
                    td=(hits/casts*100 || 0).toFixed(2)
      .row
        .col-md-6
          h3 Multi Kills 
            small (#{player.aggData.multi_kills.n} matches)
          table.table
            each val, key in constants.multi_kills
              tr
                td #{val} (#{key})
                td=player.aggData.multi_kills.counts[key] || 0

        .col-md-6
          h3 Kill Streaks 
            small (#{player.aggData.kill_streaks.n} matches)
          table.table
            each val, key in constants.kill_streaks
              tr
                td #{val} (#{key})
                td=player.aggData.kill_streaks.counts[key] || 0

      .row
        .col-md-6
          h3 Observers 
            small (#{player.aggData.obs.n} matches)
          #map.mapContainer.mapContainer-small
            img.map(src='//cdn.rawgit.com/kronusme/dota2-api/master/images/map/dota-map-6.82.jpg', alt="map")
        .col-md-6
          h3 Sentries 
            small (#{player.aggData.sen.n} matches)
          #map2.mapContainer.mapContainer-small
            img.map(src='//cdn.rawgit.com/kronusme/dota2-api/master/images/map/dota-map-6.82.jpg', alt="map")
        
append footer_assets
  script.
    var posData = !{JSON.stringify(player.posData)};
    adjustHeatmapData(posData, 300/127);
    var heatmap = h337.create({
      container: document.getElementById('map'),
      radius: 15
    });
    var heatmap2 = h337.create({
      container: document.getElementById('map2'),
      radius: 15
    });
    heatmap.setData(posData[0]["obs"]);
    heatmap2.setData(posData[0]["sen"]);
    playerTrendsTables();
    