include data_table_header

mixin data_table(options, columns, players)
  h4=options.heading
  - var p = [players.slice(0, players.length/2), players.slice(players.length/2)]
  .of-scroll
    table.mdl-data-table.mdl-js-data-table.table-striped(class=options.summable ? "summable" : "", id=options.id ? options.id : "")
      each side, i in p
        thead
          //- Add a th for the side tr.rotate
          th
          each header in columns
            if header.name === "Skills"
              - for (var lv = 1; lv < 26; lv++)
                  th.mdl-data-table__cell--non-numeric= lv
            else
              th(class=header.notNumber ? "mdl-data-table__cell--non-numeric" : "")
                if header.title
                  abbr(title=header.title)= header.name
                else
                  =header.name
        tbody
          tr.rotate
            td(class=i ? "dire":"radiant", rowspan="#{side.length + 1}")= i ? "Dire" : "Radiant"
          each player in side
            tr(class=i ? "d":"r")
              each header in columns
                //- empty name property lets us skip column
                if header.name === "Skills"
                  +skills(player)
                else if header.name
                  td(class=header.notNumber ? "mdl-data-table__cell--non-numeric" : "", class=header.name)
                    if header.name === "Player" || header.name === "Hero"
                      +hero_td(player, header.property)
                    else if header.name === "Items"
                      +items(player)
                    else if header.name === "Biggest Hit"
                      +biggest_hit(player)
                    else if header.property === "ability_uses_arr" || header.property === "item_uses_arr" || header.property === "damage_inflictor_arr"
                      +usage(player, header.property)
                    else if typeof header.property === "function"
                      =header.property(player)
                    else
                      =player[header.property] || "-"
      if options.summable
        tfoot
          tr.rotate
            td(rowspan="3") Totals
  
mixin items(player)
  each val, index in player
    if (index.slice(0, 5)==="item_")
      - var item = constants.items[constants.item_ids[val]]
      if item
        img.img-small.item(src=item.img, title=constants.item_ids[val])
  if (player.hero_id === 80 && player.additional_units)
    br
    each val, index in player.additional_units[0]
      if (index.slice(0, 5)==="item_")
        - var item = constants.items[constants.item_ids[val]]                             
        if item
          img.img-small.ability(src=item.img, title=constants.item_ids[val])

mixin skills(player)
  each ability in player.ability_upgrades || {}
    td.mdl-data-table__cell--non-numeric
      - var abilityData = constants.abilities[constants.ability_ids[ability.ability]]
        if abilityData
          img.img-small.ability(src=abilityData.img, title=constants.ability_ids[ability.ability])
        else
          =ability.ability

mixin usage(player, type)
  - var list = player.parsedPlayer[type] || []
  each entity in list
    span.img-text
      img.img-small(src=entity.img, title=entity.name, class=type==="ability_uses_arr" ? "ability" : "item", class=entity.className)
      if type === "ability_uses_arr"
        .skill-usage #{entity.val} <br> (#{entity.hero_hits || 0})
      else
        .format #{entity.val} 
       
  
mixin biggest_hit(player)
  - var p = player.parsedPlayer
  - var ability = constants.abilities[p.max_hero_hit.inflictor]
  - var item = constants.items[p.max_hero_hit.inflictor]
  - var hero = constants.hero_names[p.max_hero_hit.key]
  span.img-text
    if ability
      span: img.img-small.ability(src=ability.img, title=p.max_hero_hit.inflictor)
    else if item
      span: img.img-small.item(src=item.img, title=p.max_hero_hit.inflictor)
    else
      span: img.img-small(src="/public/images/default_attack.png", title="Auto Attack/Other")
    div #{p.max_hero_hit.value}
  if hero
    span.img-text: img.img-small(src=hero.img, title=hero.localized_name)
  else
    =p.max_hero_hit.key